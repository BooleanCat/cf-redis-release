---
meta: ~

# PROPERTIES
properties:
  <<: (( merge ))
  broker: (( .meta.broker ))
  cf: (( .meta.cf ))
  syslog_aggregator: (( .meta.syslog_aggregator ))
  redis:
    broker:
      <<: (( merge ))
      auth:
        username: (( .meta.broker.username ))
        password: (( .meta.broker.password ))
      enable_service_access: true
      service_name: (( .meta.service_name ))
      service_id: (( .meta.redis.broker.service_id ))
      shared_vm_plan_id: (( .meta.redis.broker.shared_vm_plan_id ))
      dedicated_vm_plan_id: (( .meta.redis.broker.dedicated_vm_plan_id ))
      route_name: (( .meta.route_name ))
      network: (( .meta.network.name ))
      host: (( .properties.redis.broker.subdomain "." .properties.cf.system_domain ))
      backend_port: 12345
      subdomain: (( .meta.redis.broker.subdomain || "redis-broker" ))
      name: (( .meta.redis.broker.name ))
      service_instance_limit: (( .meta.redis.shared_plan.instance_limit ))
    maxmemory: (( .meta.redis.shared_plan.max_memory ))
    config_command: (( .meta.redis.config_command ))
    save_command: (( .meta.redis.save_command ))
    bg_save_command: (( .meta.redis.bg_save_command ))
    agent:
      backend_port: 54321

# RELEASES
base_releases:
- name: (( .meta.release_name ))
  version: (( .meta.release_version || "latest"))
- name: routing
  version: 0.143.0

additional_releases: (( merge || [] ))

releases: (( base_releases additional_releases ))


# JOBS
instance_group_templates:
  cf_redis_broker:
  - name: cf-redis-broker
    release: (( .meta.release_name ))
  - name: route_registrar
    release: routing
  - name: syslog-configurator
    release: (( .meta.release_name ))
  dedicated_node:
  - name: dedicated-node
    release: (( .meta.release_name ))
  - name: syslog-configurator
    release: (( .meta.release_name ))
  broker_registrar:
  - name: broker-registrar
    release: (( .meta.release_name ))
  broker_deregistrar:
  - name: broker-deregistrar
    release: (( .meta.release_name ))
  smoke_tests:
  - name: smoke-tests
    release: (( .meta.release_name ))

additional_instance_group_templates:
  cf_redis_broker: (( merge || [] ))
  dedicated_node: (( merge || [] ))
  broker_registrar: (( merge || [] ))
  broker_deregistrar: (( merge || [] ))
  smoke_tests: (( merge || [] ))

additional_instance_group_properties:
  cf_redis_broker: (( merge || [] ))
  dedicated_node: (( merge || [] ))
  broker_registrar: (( merge || [] ))
  broker_deregistrar: (( merge || [] ))
  smoke_tests: (( merge || [] ))

additional_instance_groups: (( merge || [] ))

base_instance_groups:
- instances: 1
  name: cf-redis-broker
  azs:
  - (( .meta.network.az ))
  networks:
  - name: (( .meta.network.name ))
  persistent_disk_type: (( .meta.redis.shared_plan.persistent_disk_type ))
  vm_type: (( .meta.vm_type ))
  stemcell: (( .meta.stemcell.alias ))
  jobs: (( instance_group_templates.cf_redis_broker additional_instance_group_templates.cf_redis_broker ))
  properties:
    nats:
      machines: (( .meta.nats.machines ))
      port: (( .meta.nats.port ))
      password: (( .meta.nats.password ))
      user: (( .meta.nats.user ))
    route_registrar:
      routes:
      - name: "broker_0"
        registration_interval: 10s
        port: 12350
        tags:
          component: redis-broker
          env: (( .meta.environment_type || "production" ))
        uris:
        - (( .properties.redis.broker.subdomain "." .properties.cf.system_domain ))
        health_check:
          name: redis-broker
          script_path: /var/vcap/jobs/cf-redis-broker/bin/health_check.sh
    <<: (( merge ))
- instances: (( .meta.redis.dedicated_plan.instance_count ))
  name: dedicated-node
  networks:
  - name: (( .meta.network.name ))
  azs:
  - (( .meta.network.az ))
  persistent_disk_type: (( .meta.redis.dedicated_plan.persistent_disk_type ))
  vm_type: (( .meta.vm_type ))
  stemcell: (( .meta.stemcell.alias ))
  jobs: (( instance_group_templates.dedicated_node additional_instance_group_templates.dedicated_node ))
  properties:
    <<: (( merge ))
- instances: 1
  lifecycle: errand
  name: broker-registrar
  vm_type: (( .meta.vm_type ))
  stemcell: (( .meta.stemcell.alias ))
  networks:
  - name: (( .meta.network.name ))
  azs:
    - (( .meta.network.az ))
  properties:
    broker:
      name: (( .properties.redis.broker.name || "redis" ))
      host: (( .properties.redis.broker.route_name "." .meta.apps_domain ))
      username: (( .properties.redis.broker.auth.username ))
      password: (( .properties.redis.broker.auth.password ))
  jobs: (( instance_group_templates.broker_registrar additional_instance_group_templates.broker_registrar ))
- instances: 1
  lifecycle: errand
  name: broker-deregistrar
  vm_type: (( .meta.vm_type ))
  stemcell: (( .meta.stemcell.alias ))
  networks:
  - name: (( .meta.network.name ))
  azs:
  - (( .meta.network.az ))
  properties:
    broker:
      name: (( .properties.redis.broker.name || "redis" ))
      host: (( .properties.redis.broker.route_name "." .meta.apps_domain ))
      username: (( .properties.redis.broker.auth.username ))
      password: (( .properties.redis.broker.auth.password ))
  jobs: (( instance_group_templates.broker_deregistrar additional_instance_group_templates.broker_deregistrar ))
- instances: 1
  lifecycle: errand
  name: smoke-tests
  azs:
  - (( .meta.network.az ))
  vm_type: (( .meta.vm_type ))
  stemcell: (( .meta.stemcell.alias ))
  networks:
  - name: (( .meta.network.name ))
  jobs: (( instance_group_templates.smoke_tests additional_instance_group_templates.smoke_tests ))
  <<: (( merge ))

instance_groups: (( base_instance_groups additional_instance_groups ))
