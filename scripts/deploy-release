#!/bin/bash

set -ex

BOSH_TARGET_ALIAS="lite"
WORKSPACE_BASE_DIR="$HOME/workspace"

log() {
  local _message=$1
  echo -e "$_message"
}

bosh_target_and_set_deployment() {
  local _bosh_target=$1
  local _bosh_deployment_manifest_path=$2

  bosh target "$_bosh_target"
  bosh deployment "$_bosh_deployment_manifest_path"
}

bosh_deploy() {
  bosh -n deploy
}

bosh_run_errand() {
  local _errand_name=$1

  bosh -n run errand "$_errand_name"
}

check_args() {
  if [ -z $BOSH_MANIFEST ]
  then
    log "Please set the BOSH_MANIFEST environment variable to the path to your manifest file"
    log "E.G. export BOSH_MANIFEST=/home/example/cf-redis-release/manifests/bosh-lite.yml"
    exit 1
  fi

  if [ "$#" -lt 1 ]
  then
    log "[WARN] no BOSH target specified - defaulting to lite"
  else
    BOSH_TARGET_ALIAS=$1
  fi
}

update_release() {
  if [ ! -f scripts/update-release ]
  then
    log "Could not find scripts folder. Will run a submodule update."
    git submodule update --init --recursive
  else
    scripts/update-release
  fi
}

upload_release() {
  local _workdir=$1
  local _name=$2
  pushd "$_workdir"
  update_release
  bosh -n create release --force --name $_name
  bosh -n upload release --rebase || log "[WARN] Attempted a --rebase, but there were no job or package changes."
  popd
}

upload_metrics_releases() {
  local _bosh_deployment_manifest_path=$1
  local _exit_code=0

  set +e
  grep "redis-metrics" "$_bosh_deployment_manifest_path" > /dev/null 2>&1
  _exit_code=$?
  set -e

  if [ $_exit_code -eq 0 ]
  then
    upload_release "${WORKSPACE_BASE_DIR}/redis-metrics-release" "redis-metrics"
    upload_release "${WORKSPACE_BASE_DIR}/service-metrics-release" "service-metrics"
    upload_release "${WORKSPACE_BASE_DIR}/loggregator" "loggregator"
  fi
}

upload_backups_releases() {
  local _bosh_deployment_manifest_path=$1
  local _exit_code=0

  set +e
  grep "redis-backups" "$_bosh_deployment_manifest_path" > /dev/null 2>&1
  _exit_code=$?
  set -e

  if [ $_exit_code -eq 0 ]
  then
    upload_release "${WORKSPACE_BASE_DIR}/redis-backups-release" "redis-backups"
    upload_release "${WORKSPACE_BASE_DIR}/service-backup-release" "service-backup"
  fi
}

main() {
  check_args "$@"

  bosh_target_and_set_deployment "$BOSH_TARGET_ALIAS" "$BOSH_MANIFEST"

  upload_metrics_releases "$BOSH_MANIFEST"
  upload_backups_releases "$BOSH_MANIFEST"
  upload_release "${WORKSPACE_BASE_DIR}/cf-redis-release" "cf-redis"

  bosh_deploy
  bosh_run_errand "broker-registrar"
}

main "$@"
