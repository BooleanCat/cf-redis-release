---
meta:
  environment: ~
  external_domain: (( merge ))
  syslog_aggregator: ~
  apps_domain: (( merge ))
  nats: (( merge ))
  release_name: cf-redis

name: (( meta.environment "-redis" ))
director_uuid: (( merge ))

redis_releases:
- name: (( .meta.release_name ))
  version: latest

additional_releases: (( merge || [] ))

releases: (( redis_releases additional_releases ))

compilation:
  workers: 2
  network: redis_z1
  reuse_compilation_vms: true
  cloud_properties: (( merge ))

update:
  canaries: 1
  canary_watch_time: 30000-180000
  update_watch_time: 30000-180000
  max_in_flight: 4

networks: (( merge ))

resource_pools:
- name: redis_z1
  network: redis_z1
  stemcell: (( merge ))
  cloud_properties: (( merge ))

jobs:
- name: cf-redis-broker
  templates:
  - name: cf-redis-broker
    release: (( .meta.release_name ))
  - name: syslog-configurator
    release: (( .meta.release_name ))
  instances: 1
  resource_pool: redis_z1
  persistent_disk: (( merge || 8192 ))
  networks:
  - name: redis_z1
    static_ips: (( merge || static_ips(0) ))

- name: dedicated-node
  templates:
  - name: dedicated-node
    release: (( .meta.release_name ))
  - name: syslog-configurator
    release: (( .meta.release_name ))
  instances: (( properties.template_only.dedicated_plan.instance_count || 5 ))
  resource_pool: redis_z1
  persistent_disk: (( merge || 8192 ))
  networks:
  - name: redis_z1
    static_ips: (( merge || static_ips(1,2,3,4,5,6,7,8,9,10) ))

- name: broker-registrar
  instances: 1
  lifecycle: errand
  networks:
  - name: redis_z1
  resource_pool: redis_z1
  templates:
  - name: broker-registrar
    release: (( .meta.release_name ))
  properties:
    broker:
      name: (( .properties.redis.broker.name || "redis" ))
      host: (( .properties.redis.broker.route_name "." .meta.apps_domain ))
      username: (( .properties.redis.broker.auth.username ))
      password: (( .properties.redis.broker.auth.password ))

- name: broker-deregistrar
  instances: 1
  lifecycle: errand
  networks:
  - name: redis_z1
  resource_pool: redis_z1
  templates:
  - name: broker-deregistrar
    release: (( .meta.release_name ))
  properties:
    broker:
      name: (( .properties.redis.broker.name || "redis" ))
      host: (( .properties.redis.broker.route_name "." .meta.apps_domain ))
      username: (( .properties.redis.broker.auth.username ))
      password: (( .properties.redis.broker.auth.password ))

- name: smoke-tests
  instances: 1
  lifecycle: errand
  networks:
  - name: redis_z1
  resource_pool: redis_z1
  templates:
  - name: smoke-tests
    release: (( .meta.release_name ))

properties:
  template_only: (( merge ))
  syslog_aggregator: (( meta.syslog_aggregator ))
  cf:
    api_url: (( merge ))
    apps_domain: (( meta.apps_domain ))
    admin_username: (( merge ))
    admin_password: (( merge ))
    nats: (( meta.nats ))
  redis:
    maxmemory: (( properties.template_only.shared_plan.max_memory || 262144000 ))
    host: (( jobs.cf-redis-broker.networks.redis_z1.static_ips.[0] ))
    config_command: (( merge || "configalias" ))
    save_command: (( merge || "anotherrandomstring" ))
    bg_save_command: (( merge || "yetanotherrandomstring" ))
    agent:
      backend_port: 54321
    broker:
      network: redis_z1
      backend_host: (( jobs.cf-redis-broker.networks.redis_z1.static_ips.[0] ))
      backend_port: 12345
      name: redis
      service_name: (( merge || "redis" ))
      service_instance_limit: (( properties.template_only.shared_plan.instance_limit || 5 ))
      enable_service_access: (( merge || true ))
      dedicated_nodes: (( jobs.dedicated-node.networks.redis_z1.static_ips ))
      auth:
        username: (( merge ))
        password: (( merge ))
      route_name: (( merge ))
